{"ast":null,"code":"var _jsxFileName = \"/home/matsuyama/claude/git/game/src/components/GameCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport './GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  gameState,\n  setGameState,\n  onCanvasClick\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const update = useCallback(() => {\n    setGameState(prevState => {\n      const newState = {\n        ...prevState\n      };\n      if (newState.player.attackCooldown > 0) {\n        newState.player = {\n          ...newState.player,\n          attackCooldown: newState.player.attackCooldown - 1\n        };\n      }\n      newState.player = {\n        ...newState.player,\n        animFrame: newState.player.animFrame + newState.player.animSpeed\n      };\n      newState.monsters = newState.monsters.map(monster => ({\n        ...monster,\n        animFrame: monster.animFrame + monster.animSpeed\n      }));\n      newState.particles = newState.particles.filter(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.life--;\n        return particle.life > 0;\n      });\n      newState.damageTexts = newState.damageTexts.filter(text => {\n        text.y -= 1;\n        text.life--;\n        return text.life > 0;\n      });\n      return newState;\n    });\n  }, [setGameState]);\n  const drawPlayer = useCallback((ctx, player) => {\n    ctx.fillStyle = player.isAttacking ? '#ffaaff' : '#ff69b4';\n    const offsetY = Math.sin(player.animFrame) * 2;\n    ctx.fillRect(player.x, player.y + offsetY, player.width, player.height);\n    ctx.fillStyle = '#ffddff';\n    ctx.fillRect(player.x + 15, player.y + 10 + offsetY, 30, 30);\n    ctx.fillStyle = '#4169e1';\n    ctx.fillRect(player.x + 10, player.y + 45 + offsetY, 40, 35);\n    if (player.isAttacking) {\n      ctx.fillStyle = '#ffff00';\n      ctx.fillRect(player.x + 50, player.y + 20 + offsetY, 20, 5);\n      ctx.fillStyle = '#ffa500';\n      for (let i = 0; i < 5; i++) {\n        ctx.fillRect(player.x + 70 + i * 8, player.y + 15 + offsetY + Math.sin(Date.now() * 0.01 + i) * 3, 6, 15);\n      }\n    }\n    ctx.fillStyle = '#ff1493';\n    ctx.fillRect(player.x + 5, player.y + 5 + offsetY, 50, 15);\n  }, []);\n  const drawMonsters = useCallback((ctx, monsters) => {\n    monsters.forEach(monster => {\n      const offsetY = Math.sin(monster.animFrame) * 1;\n      ctx.fillStyle = monster.color;\n      ctx.fillRect(monster.x, monster.y + offsetY, monster.width, monster.height);\n      ctx.fillStyle = '#ff0000';\n      ctx.fillRect(monster.x + 10, monster.y + 10 + offsetY, 15, 15);\n      const hpPercent = monster.hp / monster.maxHp;\n      ctx.fillStyle = '#ff0000';\n      ctx.fillRect(monster.x, monster.y - 10, monster.width, 6);\n      ctx.fillStyle = '#00ff00';\n      ctx.fillRect(monster.x, monster.y - 10, monster.width * hpPercent, 6);\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(monster.name, monster.x + monster.width / 2, monster.y - 15);\n    });\n  }, []);\n  const drawParticles = useCallback((ctx, particles) => {\n    particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      ctx.globalAlpha = alpha;\n      ctx.fillStyle = particle.color;\n      ctx.fillRect(particle.x, particle.y, 3, 3);\n      ctx.globalAlpha = 1;\n    });\n  }, []);\n  const drawDamageTexts = useCallback((ctx, damageTexts) => {\n    damageTexts.forEach(text => {\n      const alpha = text.life / text.maxLife;\n      ctx.globalAlpha = alpha;\n      ctx.fillStyle = text.color;\n      ctx.font = 'bold 16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(text.text, text.x, text.y);\n      ctx.globalAlpha = 1;\n    });\n  }, []);\n  const draw = useCallback(ctx => {\n    ctx.clearRect(0, 0, 800, 600);\n    const gradient = ctx.createLinearGradient(0, 0, 0, 600);\n    gradient.addColorStop(0, '#2c1810');\n    gradient.addColorStop(1, '#8B4513');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 800, 600);\n    drawPlayer(ctx, gameState.player);\n    drawMonsters(ctx, gameState.monsters);\n    drawParticles(ctx, gameState.particles);\n    drawDamageTexts(ctx, gameState.damageTexts);\n  }, [gameState, drawPlayer, drawMonsters, drawParticles, drawDamageTexts]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const gameLoop = () => {\n      update();\n      draw(ctx);\n      animationRef.current = requestAnimationFrame(gameLoop);\n    };\n    gameLoop();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [update, draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"game-canvas\",\n    width: 800,\n    height: 600,\n    onClick: onCanvasClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"MHnJB5N91NlwMmW7uZAVGtNrYag=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","GameCanvas","gameState","setGameState","onCanvasClick","_s","canvasRef","animationRef","update","prevState","newState","player","attackCooldown","animFrame","animSpeed","monsters","map","monster","particles","filter","particle","x","vx","y","vy","life","damageTexts","text","drawPlayer","ctx","fillStyle","isAttacking","offsetY","Math","sin","fillRect","width","height","i","Date","now","drawMonsters","forEach","color","hpPercent","hp","maxHp","font","textAlign","fillText","name","drawParticles","alpha","maxLife","globalAlpha","drawDamageTexts","draw","clearRect","gradient","createLinearGradient","addColorStop","canvas","current","getContext","gameLoop","requestAnimationFrame","cancelAnimationFrame","ref","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/matsuyama/claude/git/game/src/components/GameCanvas.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { GameCanvasProps, GameState, Player, Monster, Particle, DamageText } from '../types/gameTypes';\nimport './GameCanvas.css';\n\nconst GameCanvas: React.FC<GameCanvasProps> = ({ gameState, setGameState, onCanvasClick }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number | null>(null);\n\n  const update = useCallback(() => {\n    setGameState((prevState: GameState) => {\n      const newState: GameState = { ...prevState };\n      \n      if (newState.player.attackCooldown > 0) {\n        newState.player = {\n          ...newState.player,\n          attackCooldown: newState.player.attackCooldown - 1\n        };\n      }\n\n      newState.player = {\n        ...newState.player,\n        animFrame: newState.player.animFrame + newState.player.animSpeed\n      };\n\n      newState.monsters = newState.monsters.map((monster: Monster) => ({\n        ...monster,\n        animFrame: monster.animFrame + monster.animSpeed\n      }));\n\n      newState.particles = newState.particles.filter((particle: Particle) => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.life--;\n        return particle.life > 0;\n      });\n\n      newState.damageTexts = newState.damageTexts.filter((text: DamageText) => {\n        text.y -= 1;\n        text.life--;\n        return text.life > 0;\n      });\n\n      return newState;\n    });\n  }, [setGameState]);\n\n  const drawPlayer = useCallback((ctx: CanvasRenderingContext2D, player: Player) => {\n    ctx.fillStyle = player.isAttacking ? '#ffaaff' : '#ff69b4';\n    \n    const offsetY = Math.sin(player.animFrame) * 2;\n    \n    ctx.fillRect(player.x, player.y + offsetY, player.width, player.height);\n    \n    ctx.fillStyle = '#ffddff';\n    ctx.fillRect(player.x + 15, player.y + 10 + offsetY, 30, 30);\n    \n    ctx.fillStyle = '#4169e1';\n    ctx.fillRect(player.x + 10, player.y + 45 + offsetY, 40, 35);\n    \n    if (player.isAttacking) {\n      ctx.fillStyle = '#ffff00';\n      ctx.fillRect(player.x + 50, player.y + 20 + offsetY, 20, 5);\n      \n      ctx.fillStyle = '#ffa500';\n      for (let i = 0; i < 5; i++) {\n        ctx.fillRect(\n          player.x + 70 + i * 8,\n          player.y + 15 + offsetY + Math.sin(Date.now() * 0.01 + i) * 3,\n          6, 15\n        );\n      }\n    }\n    \n    ctx.fillStyle = '#ff1493';\n    ctx.fillRect(player.x + 5, player.y + 5 + offsetY, 50, 15);\n  }, []);\n\n  const drawMonsters = useCallback((ctx: CanvasRenderingContext2D, monsters: Monster[]) => {\n    monsters.forEach((monster: Monster) => {\n      const offsetY = Math.sin(monster.animFrame) * 1;\n      \n      ctx.fillStyle = monster.color;\n      ctx.fillRect(monster.x, monster.y + offsetY, monster.width, monster.height);\n      \n      ctx.fillStyle = '#ff0000';\n      ctx.fillRect(monster.x + 10, monster.y + 10 + offsetY, 15, 15);\n      \n      const hpPercent = monster.hp / monster.maxHp;\n      ctx.fillStyle = '#ff0000';\n      ctx.fillRect(monster.x, monster.y - 10, monster.width, 6);\n      ctx.fillStyle = '#00ff00';\n      ctx.fillRect(monster.x, monster.y - 10, monster.width * hpPercent, 6);\n      \n      ctx.fillStyle = '#ffffff';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(monster.name, monster.x + monster.width / 2, monster.y - 15);\n    });\n  }, []);\n\n  const drawParticles = useCallback((ctx: CanvasRenderingContext2D, particles: Particle[]) => {\n    particles.forEach((particle: Particle) => {\n      const alpha = particle.life / particle.maxLife;\n      ctx.globalAlpha = alpha;\n      ctx.fillStyle = particle.color;\n      ctx.fillRect(particle.x, particle.y, 3, 3);\n      ctx.globalAlpha = 1;\n    });\n  }, []);\n\n  const drawDamageTexts = useCallback((ctx: CanvasRenderingContext2D, damageTexts: DamageText[]) => {\n    damageTexts.forEach((text: DamageText) => {\n      const alpha = text.life / text.maxLife;\n      ctx.globalAlpha = alpha;\n      ctx.fillStyle = text.color;\n      ctx.font = 'bold 16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(text.text, text.x, text.y);\n      ctx.globalAlpha = 1;\n    });\n  }, []);\n\n  const draw = useCallback((ctx: CanvasRenderingContext2D) => {\n    ctx.clearRect(0, 0, 800, 600);\n\n    const gradient = ctx.createLinearGradient(0, 0, 0, 600);\n    gradient.addColorStop(0, '#2c1810');\n    gradient.addColorStop(1, '#8B4513');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 800, 600);\n\n    drawPlayer(ctx, gameState.player);\n    drawMonsters(ctx, gameState.monsters);\n    drawParticles(ctx, gameState.particles);\n    drawDamageTexts(ctx, gameState.damageTexts);\n  }, [gameState, drawPlayer, drawMonsters, drawParticles, drawDamageTexts]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    const gameLoop = () => {\n      update();\n      draw(ctx);\n      animationRef.current = requestAnimationFrame(gameLoop);\n    };\n\n    gameLoop();\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [update, draw]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"game-canvas\"\n      width={800}\n      height={600}\n      onClick={onCanvasClick}\n    />\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}