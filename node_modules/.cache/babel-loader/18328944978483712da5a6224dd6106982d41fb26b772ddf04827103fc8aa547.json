{"ast":null,"code":"var _jsxFileName = \"/home/matsuyama/claude/git/game/src/components/BattleLog.tsx\";\nimport React from 'react';\nimport { getRarityColor } from '../data/itemData';\nimport './BattleLog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleLogComponent = ({\n  logs\n}) => {\n  const formatTime = timestamp => {\n    return timestamp.toLocaleTimeString('ja-JP', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  const getLogIcon = type => {\n    switch (type) {\n      case 'attack':\n        return '‚öîÔ∏è';\n      case 'levelup':\n        return '‚¨ÜÔ∏è';\n      case 'item_drop':\n        return 'üì¶';\n      case 'monster_defeat':\n        return 'üíÄ';\n      default:\n        return 'üìù';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battle-log\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCDC \\u6226\\u95D8\\u30ED\\u30B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-container\",\n      children: logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-logs\",\n        children: \"\\u6226\\u95D8\\u3092\\u958B\\u59CB\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `log-entry ${log.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-icon\",\n            children: getLogIcon(log.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-time\",\n            children: formatTime(log.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-message\",\n          children: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), log.attackPhrase && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-attack-phrase\",\n          children: [\"\\uD83D\\uDCAD \\\"\", log.attackPhrase, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), log.item && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-item\",\n          style: {\n            color: getRarityColor(log.item.rarity)\n          },\n          children: [log.item.icon, \" \", log.item.name, \" (\", log.item.rarity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = BattleLogComponent;\nexport default BattleLogComponent;\nvar _c;\n$RefreshReg$(_c, \"BattleLogComponent\");","map":{"version":3,"names":["React","getRarityColor","jsxDEV","_jsxDEV","BattleLogComponent","logs","formatTime","timestamp","toLocaleTimeString","hour","minute","second","getLogIcon","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","message","attackPhrase","item","style","color","rarity","icon","name","id","_c","$RefreshReg$"],"sources":["/home/matsuyama/claude/git/game/src/components/BattleLog.tsx"],"sourcesContent":["import React from 'react';\nimport { BattleLog } from '../types/gameTypes';\nimport { getRarityColor } from '../data/itemData';\nimport './BattleLog.css';\n\ninterface BattleLogProps {\n  logs: BattleLog[];\n}\n\nconst BattleLogComponent: React.FC<BattleLogProps> = ({ logs }) => {\n  const formatTime = (timestamp: Date) => {\n    return timestamp.toLocaleTimeString('ja-JP', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const getLogIcon = (type: string) => {\n    switch (type) {\n      case 'attack': return '‚öîÔ∏è';\n      case 'levelup': return '‚¨ÜÔ∏è';\n      case 'item_drop': return 'üì¶';\n      case 'monster_defeat': return 'üíÄ';\n      default: return 'üìù';\n    }\n  };\n\n  return (\n    <div className=\"battle-log\">\n      <h3>üìú Êà¶Èóò„É≠„Ç∞</h3>\n      <div className=\"log-container\">\n        {logs.length === 0 ? (\n          <div className=\"no-logs\">Êà¶Èóò„ÇíÈñãÂßã„Åó„Å¶„Åè„Å†„Åï„ÅÑ</div>\n        ) : (\n          logs.map((log) => (\n            <div \n              key={log.id} \n              className={`log-entry ${log.type}`}\n            >\n              <div className=\"log-header\">\n                <span className=\"log-icon\">{getLogIcon(log.type)}</span>\n                <span className=\"log-time\">{formatTime(log.timestamp)}</span>\n              </div>\n              <div className=\"log-message\">{log.message}</div>\n              {log.attackPhrase && (\n                <div className=\"log-attack-phrase\">\n                  üí≠ \"{log.attackPhrase}\"\n                </div>\n              )}\n              {log.item && (\n                <div \n                  className=\"log-item\"\n                  style={{ color: getRarityColor(log.item.rarity) }}\n                >\n                  {log.item.icon} {log.item.name} ({log.item.rarity})\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BattleLogComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}